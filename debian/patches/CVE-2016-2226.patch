Description: fix integer overflow in string_appends
Origin: backport, https://gcc.gnu.org/git/?p=gcc.git;a=commit;h=b8106f544a7fd485b6959ebd197bdd99a8884416
Bug: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=69687

Index: valgrind-3.12.0~svn20160714/coregrind/m_demangle/cplus-dem.c
===================================================================
--- valgrind-3.12.0~svn20160714.orig/coregrind/m_demangle/cplus-dem.c	2016-07-14 17:59:54.000000000 -0400
+++ valgrind-3.12.0~svn20160714/coregrind/m_demangle/cplus-dem.c	2017-06-07 15:02:29.755632207 -0400
@@ -65,6 +65,15 @@ void * realloc ();
 #endif /* ! in valgrind */
 
 #if 0 /* in valgrind */
+#ifdef HAVE_LIMITS_H
+#include <limits.h>
+#endif
+#endif /* ! in valgrind */
+#ifndef INT_MAX
+# define INT_MAX       (int)(((unsigned int) ~0) >> 1)          /* 0x7FFFFFFF */ 
+#endif
+
+#if 0 /* in valgrind */
 #include <demangle.h>
 #undef CURRENT_DEMANGLING_STYLE
 #define CURRENT_DEMANGLING_STYLE work->options
@@ -4265,6 +4274,8 @@ remember_type (struct work_stuff *work,
 	}
       else
 	{
+          if (work -> typevec_size > INT_MAX / 2)
+	    xmalloc_failed (INT_MAX);
 	  work -> typevec_size *= 2;
 	  work -> typevec
 	    = XRESIZEVEC (char *, work->typevec, work->typevec_size);
@@ -4292,6 +4303,8 @@ remember_Ktype (struct work_stuff *work,
 	}
       else
 	{
+          if (work -> ksize > INT_MAX / 2)
+	    xmalloc_failed (INT_MAX);
 	  work -> ksize *= 2;
 	  work -> ktypevec
 	    = XRESIZEVEC (char *, work->ktypevec, work->ksize);
@@ -4321,6 +4334,8 @@ register_Btype (struct work_stuff *work)
 	}
       else
 	{
+          if (work -> bsize > INT_MAX / 2)
+	    xmalloc_failed (INT_MAX);
 	  work -> bsize *= 2;
 	  work -> btypevec
 	    = XRESIZEVEC (char *, work->btypevec, work->bsize);
@@ -4791,6 +4806,8 @@ string_need (string *s, int n)
   else if (s->e - s->p < n)
     {
       tem = s->p - s->b;
+      if (n > INT_MAX / 2 - tem)
+        xmalloc_failed (INT_MAX); 
       n += tem;
       n *= 2;
       s->b = XRESIZEVEC (char, s->b, n);
Index: valgrind-3.12.0~svn20160714/coregrind/m_demangle/vg_libciface.h
===================================================================
--- valgrind-3.12.0~svn20160714.orig/coregrind/m_demangle/vg_libciface.h	2017-06-07 15:43:46.000000000 -0400
+++ valgrind-3.12.0~svn20160714/coregrind/m_demangle/vg_libciface.h	2017-06-07 15:44:57.880345612 -0400
@@ -69,11 +69,20 @@
 
 #define xmalloc(_nn)      \
    VG_(arena_malloc)(VG_AR_DEMANGLE, "m_demangle.xmalloc", (_nn))
+#define xmalloc_failed(_sz) abort()
 #define xrealloc(_pt,_sz) \
    VG_(arena_realloc)(VG_AR_DEMANGLE,"m_demangle.xrealloc",(_pt),(_sz))
 #define xstrdup(_str) \
    VG_(arena_strdup)(VG_AR_DEMANGLE,"m_demangle.xstrdup",(_str))
 
+static inline void *xmemdup(const void *in, size_t c_size, size_t a_size) {
+   void *dst;
+   dst = VG_(arena_malloc)(VG_AR_DEMANGLE, "m_demangle.xmemdup", a_size);
+   if (a_size > c_size)
+      memset ((char *) dst + c_size, 0, a_size - c_size);
+   return memcpy (dst, in, c_size);
+}
+
 /* Required by safe-ctype.h */
 
 #undef EOF
