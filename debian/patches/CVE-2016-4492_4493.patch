Description: fix buffer overflow in do_type
Origin: backport, https://gcc.gnu.org/git/?p=gcc.git;a=commit;h=b6616075cb48d42a28cc78ca1c66127b671b361c
Bug: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=70926

Index: valgrind-3.12.0~svn20160714/coregrind/m_demangle/cplus-dem.c
===================================================================
--- valgrind-3.12.0~svn20160714.orig/coregrind/m_demangle/cplus-dem.c	2017-06-07 15:04:14.928714539 -0400
+++ valgrind-3.12.0~svn20160714/coregrind/m_demangle/cplus-dem.c	2017-06-07 15:06:27.122072348 -0400
@@ -2057,7 +2057,8 @@ demangle_template_value_parm (struct wor
       else
 	{
 	  int symbol_len  = consume_count (mangled);
-	  if (symbol_len == -1)
+	  if (symbol_len == -1
+	      || symbol_len > (long) strlen (*mangled))
 	    return -1;
 	  if (symbol_len == 0)
 	    string_appendn (s, "0", 1);
@@ -3617,7 +3618,7 @@ do_type (struct work_stuff *work, const
 	/* A back reference to a previously seen type */
 	case 'T':
 	  (*mangled)++;
-	  if (!get_count (mangled, &n) || n >= work -> ntypes)
+	  if (!get_count (mangled, &n) || n < 0 || n >= work -> ntypes)
 	    {
 	      success = 0;
 	    }
@@ -3795,7 +3796,7 @@ do_type (struct work_stuff *work, const
     /* A back reference to a previously seen squangled type */
     case 'B':
       (*mangled)++;
-      if (!get_count (mangled, &n) || n >= work -> numb)
+      if (!get_count (mangled, &n) || n < 0 || n >= work -> numb)
 	success = 0;
       else
 	string_append (result, work->btypevec[n]);
@@ -4143,7 +4144,8 @@ do_hpacc_template_literal (struct work_s
 
   literal_len = consume_count (mangled);
 
-  if (literal_len <= 0)
+  if (literal_len <= 0
+      || literal_len > (long) strlen (*mangled))
     return 0;
 
   /* Literal parameters are names of arrays, functions, etc.  and the
